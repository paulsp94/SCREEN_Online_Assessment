{"version":3,"sources":["Components/VerticalStepper.jsx","App.jsx","serviceWorker.js","index.js"],"names":["VerticalLinearStepper","state","activeStep","type","handleNext","_this","setState","handleBack","handleReset","handleChange","event","target","value","getStepContent","step","classes","props","react_default","a","createElement","FormControl_default","variant","className","formControl","InputLabel_default","ref","InputLabelRef","htmlFor","Select_default","onChange","input","OutlinedInput_default","labelWidth","name","id","MenuItem_default","_this2","this","steps","root","style","paddingTop","margin","Stepper_default","orientation","map","label","index","Step_default","key","StepLabel_default","StepContent_default","Typography_default","actionsContainer","Button_default","disabled","onClick","button","color","length","Paper_default","square","elevation","resetContainer","React","Component","withStyles","theme","width","marginTop","spacing","unit","marginRight","marginBottom","padding","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","calcAssesmentValue","_this$state","relevantStakeholders","_this$state2","circularProcurment","Cn","Dn","Fn","val","C7","C8","E9","Av","description","AppBar_default","position","Toolbar_default","VerticalStepper","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e4ff815a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n  root: {\n    width: '90%'\n  },\n  button: {\n    marginTop: theme.spacing.unit,\n    marginRight: theme.spacing.unit\n  },\n  actionsContainer: {\n    marginBottom: theme.spacing.unit * 2\n  },\n  resetContainer: {\n    padding: theme.spacing.unit * 3\n  },\n  formControl: {\n    width: '150px',\n    margin: 'auto'\n  }\n});\n\nfunction getSteps() {\n  return [\n    'Select project type',\n    'Add metrics and additional parameters',\n    'Climate metrics',\n    'Employment metrics',\n    'Circular procurment or educational project'\n  ];\n}\n\nclass VerticalLinearStepper extends React.Component {\n  state = {\n    activeStep: 0,\n    type: ''\n  };\n\n  handleNext = () => {\n    this.setState(state => ({\n      activeStep: state.activeStep + 1\n    }));\n  };\n\n  handleBack = () => {\n    this.setState(state => ({\n      activeStep: state.activeStep - 1\n    }));\n  };\n\n  handleReset = () => {\n    this.setState({\n      activeStep: 0\n    });\n  };\n\n  handleChange = event => {\n    this.setState({ type: event.target.value });\n  };\n\n  getStepContent = step => {\n    const { classes } = this.props;\n    const { type } = this.state;\n    switch (step) {\n      case 0:\n        return (\n          <FormControl variant=\"outlined\" className={classes.formControl}>\n            <InputLabel\n              ref={ref => {\n                this.InputLabelRef = ref;\n              }}\n              htmlFor=\"outlined-project-simple\"\n            >\n              Project Type\n            </InputLabel>\n            <Select\n              value={type}\n              onChange={this.handleChange}\n              input={\n                <OutlinedInput\n                  labelWidth=\"87\"\n                  name=\"project\"\n                  id=\"outlined-project-simple\"\n                />\n              }\n            >\n              <MenuItem value={10}>Production</MenuItem>\n              <MenuItem value={20}>Consumtion</MenuItem>\n              <MenuItem value={30}>Disposal</MenuItem>\n            </Select>\n          </FormControl>\n        );\n      case 1:\n        return 'An ad group contains one or more ads which target a shared set of keywords.';\n      case 2:\n        return `Try out different ad text to see what brings in the most customers,\n                and learn how to enhance your ads using features like ad extensions.\n                If you run into any problems with your ads, find out how to tell if\n                they're running and how to resolve approval issues.`;\n      default:\n        return 'Unknown step';\n    }\n  };\n\n  render() {\n    const { classes } = this.props;\n    const steps = getSteps();\n    const { activeStep } = this.state;\n\n    return (\n      <div\n        className={classes.root}\n        style={{ paddingTop: '10px', margin: 'auto' }}\n      >\n        <Stepper activeStep={activeStep} orientation=\"vertical\">\n          {steps.map((label, index) => (\n            <Step key={label}>\n              <StepLabel>{label}</StepLabel>\n              <StepContent>\n                <Typography>{this.getStepContent(index)}</Typography>\n                <div className={classes.actionsContainer}>\n                  <div>\n                    <Button\n                      disabled={activeStep === 0}\n                      onClick={this.handleBack}\n                      className={classes.button}\n                    >\n                      Back\n                    </Button>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={this.handleNext}\n                      className={classes.button}\n                    >\n                      {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                    </Button>\n                  </div>\n                </div>\n              </StepContent>\n            </Step>\n          ))}\n        </Stepper>\n        {activeStep === steps.length && (\n          <Paper square elevation={0} className={classes.resetContainer}>\n            <Typography>All steps completed - you&apos;re finished</Typography>\n            <Button onClick={this.handleReset} className={classes.button}>\n              Reset\n            </Button>\n          </Paper>\n        )}\n      </div>\n    );\n  }\n}\n\nVerticalLinearStepper.propTypes = {\n  classes: PropTypes.object\n};\n\nexport default withStyles(styles)(VerticalLinearStepper);\n","import React, { Component } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nimport './App.css';\nimport './Components/VerticalStepper';\nimport VerticalStepper from './Components/VerticalStepper';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Av: 1,\n      Cn: 1,\n      Dn: 1,\n      Fn: 1,\n      C7: 1,\n      C8: 1,\n      E9: 1,\n      description: '',\n      relevantStakeholders: false,\n      circularProcurment: false\n    };\n  }\n\n  calcAssesmentValue = () => {\n    const { relevantStakeholders, circularProcurment } = this.state;\n    let { Cn, Dn, Fn, C7, C8, E9 } = this.state;\n    if (relevantStakeholders) {\n      Fn *= 1.1;\n    }\n    const val = Cn * Dn * Fn * C7 * C8 * E9;\n    this.setState({ Av: val });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <AppBar position=\"static\" color=\"default\">\n          <Toolbar>\n            <Typography variant=\"h6\" color=\"inherit\">\n              SCREEN Online Assessment\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <VerticalStepper />\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'typeface-roboto';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}